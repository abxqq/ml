import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

data = pd.read_csv('pima (1).csv')
data.head()

Pregnancies	Glucose	BloodPressure	SkinThickness	Insulin	BMI	DiabetesPedigreeFunction	Age	Outcome
0	6	148	72	35	0	33.6	0.627	50	1
1	1	85	66	29	0	26.6	0.351	31	0
2	8	183	64	0	0	23.3	0.672	32	1
3	1	89	66	23	94	28.1	0.167	21	0
4	0	137	40	35	168	43.1	2.288	33	1

from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.datasets import make_classification
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import StandardScaler, MinMaxScaler

from matplotlib import rcParams
import warnings

data.columns

Index(['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin',
       'BMI', 'DiabetesPedigreeFunction', 'Age', 'Outcome'],
      dtype='object')
      
X=data.drop("Outcome",axis=1)
y=data["Outcome"]

scaler=StandardScaler()
X_scaled=scaler.fit_transform(X)

X_train,X_test,Y_train,Y_test=train_test_split(X_scaled,y,stratify=y,test_size=0.10,random_state=34)

classifier = RandomForestClassifier(n_estimators=100)
classifier.fit(X_train,Y_train)
RandomForestClassifer()

y_pred = classifier.predict(X_test)

print("Accuracy:",accuracy_score(Y_test,y_pred))
Accuracy: 0.8311688311688312

feature_importances_df = pd.DataFrame(
    {"feature":list(X.columns),"importance":classifier.feature_importances_}
).sort_values("importance",ascending=False)

feature_importances_df


feature	importance
1	Glucose	0.255154
5	BMI	0.160710
6	DiabetesPedigreeFunction	0.131925
7	Age	0.125594
2	BloodPressure	0.093487
0	Pregnancies	0.083569
4	Insulin	0.076571
3	SkinThickness	0.072991
