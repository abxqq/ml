import pandas as pd
import numpy as np

data = pd.read_csv('covid.csv')

data
no	pc	wbc	mc	ast	bc	ldh	diagnosis
0	1	Low	Low	Low	High	Normal	Normal	True
1	2	Low	Low	Normal	High	Normal	High	True
2	3	Low	High	Normal	High	Normal	Normal	False
3	4	Low	High	Normal	High	High	Normal	True
4	5	Low	Normal	High	High	Normal	Normal	False
5	6	Low	Normal	Normal	High	Normal	High	True
6	7	Normal	Low	Low	High	Normal	Normal	True
7	8	Normal	High	Normal	High	Normal	Normal	False
8	9	Normal	High	Normal	High	High	High	True
9	10	Normal	Normal	High	High	Normal	Normal	False
10	11	Normal	Normal	High	High	Normal	High	True
11	12	High	Low	Low	Normal	Normal	Normal	True
12	13	High	Normal	High	Normal	Normal	Normal	False
13	14	High	Normal	High	Normal	High	High	True
14	15	High	High	Normal	Normal	Normal	High	True
15	16	Low	Normal	High	High	High	Normal	False
16	17	Normal	Normal	High	High	High	Normal	False
17	18	High	Low	Low	Normal	Normal	High	True
18	19	Normal	Normal	Normal	High	Normal	Normal	False
19	20	Normal	High	Normal	High	Normal	High	True
20	21	Normal	Low	Normal	High	Normal	High	True
21	22	Low	High	Normal	High	High	High	True
22	23	Low	Low	Low	High	High	High	True
23	24	High	High	Normal	Normal	Normal	Normal	True
24	25	High	Normal	Normal	Normal	Normal	Normal	False

from sklearn import preprocessing
le = preprocessing.LabelEncoder()
pc_encoded=le.fit_transform(data['pc'].values)
wbc_encoded=le.fit_transform(data['wbc'].values)
mc_encoded=le.fit_transform(data['mc'].values)
ast_encoded=le.fit_transform(data['ast'].values)
bc_encoded=le.fit_transform(data['bc'].values)
ldh_encoded=le.fit_transform(data['ldh'].values)
Y=le.fit_transform(data['diagnosis'].values)

X=np.array(list(zip(pc_encoded,wbc_encoded,mc_encoded,ast_encoded,bc_encoded,ldh_encoded)))
X

array([[1, 1, 1, 0, 1, 1],
       [1, 1, 2, 0, 1, 0],
       [1, 0, 2, 0, 1, 1],
       [1, 0, 2, 0, 0, 1],
       [1, 2, 0, 0, 1, 1],
       [1, 2, 2, 0, 1, 0],
       [2, 1, 1, 0, 1, 1],
       [2, 0, 2, 0, 1, 1],
       [2, 0, 2, 0, 0, 0],
       [2, 2, 0, 0, 1, 1],
       [2, 2, 0, 0, 1, 0],
       [0, 1, 1, 1, 1, 1],
       [0, 2, 0, 1, 1, 1],
       [0, 2, 0, 1, 0, 0],
       [0, 0, 2, 1, 1, 0],
       [1, 2, 0, 0, 0, 1],
       [2, 2, 0, 0, 0, 1],
       [0, 1, 1, 1, 1, 0],
       [2, 2, 2, 0, 1, 1],
       [2, 0, 2, 0, 1, 0],
       [2, 1, 2, 0, 1, 0],
       [1, 0, 2, 0, 0, 0],
       [1, 1, 1, 0, 0, 0],
       [0, 0, 2, 1, 1, 1],
       [0, 2, 2, 1, 1, 1]])
       
       Y
array([1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1,
       1, 1, 0])
       
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score
from sklearn.metrics import classification_report
model = MultinomialNB()

from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(X,Y)

model.fit(X_train, Y_train)
y_pred = model.predict(X_test)

print("Accuracy:",accuracy_score(Y_test, y_pred))
Accuracy: 0.8571428571428571

print("\nReport")
print(classification_report(Y_test,y_pred))
Report
              precision    recall  f1-score   support

           0       1.00      0.67      0.80         3
           1       0.80      1.00      0.89         4

    accuracy                           0.86         7
   macro avg       0.90      0.83      0.84         7
weighted avg       0.89      0.86      0.85         7
